akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  logger-startup-timeout = 30s
}

sbus {
  package-to-scan = "com.sbuslab"

  auth {
    enabled = false
    required = false

    name = ""
    private-key = ""
    public-keys = { }

    consul {
      enabled = false
    }

    rbac {
      identities = { }
      actions = { }
    }
  }

  transports {
    dispatcher {
      default = rabbitmq
      // events    = kafka
      // broadcast = kafka
    }

    rabbitmq {
      host = "localhost"
      port = 5672
      username = "guest"
      password = "guest"
      ssl {
        enabled = false
      }

      prefetch-count = 64
      default-command-retries = 15
      default-timeout = 12 seconds
      shutdown-timeout = 3 seconds

      pretty-json = false
      log-trim-length = 1024
      unlogged-requests = []
      subscription-whitelist = []

      circuit-breaker {
        enabled = false
        max-failures = 64
        reset-timeout = 5 seconds
      }

      channels {
        default {
          exchange = "sbus.common"
          exchange-type = "direct"

          queue-name = "%s"
          durable = false
          exclusive = false
          autodelete = false
          mandatory = true
          heartbeat = false
          routing-keys = []    # optional, by default get from subscriptionName
        }

        events {
          exchange = "sbus.events"
          exchange-type = "topic"
          mandatory = false
          heartbeat = true
        }

        broadcast = ${sbus.transports.rabbitmq.channels.events} {
          queue-name = ""
          exclusive = true
          autodelete = true
          heartbeat = false
        }
      }
    }

    kafka {

    }
  }
}
